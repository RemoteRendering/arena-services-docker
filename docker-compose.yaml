# this is the base docker compose
#
# run production:
#    docker-compose -f docker-compose.yaml -f docker-compose.prod.yaml up -d
#
# run development:
#    docker-compose up -d
#
# NOTE: if -f is not given, 'docker-compose up' will use docker-compose.override.yaml (https://docs.docker.com/compose/extends/)

version: '3'

services:

  arena-web: # create a container named "arena-web"; other service containers in this file can resolve its name (arena-web)
    image: "nginx" # creates container from nginx
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt # mount certbot files (used in conf/nginx-conf.d/arena-web.conf)
      - ./data/certbot/www:/var/www/certbot # mount certbot files (used in conf/nginx-conf.d/arena-web.conf)
      - arts-static-content:/usr/share/nginx/html/arts # serve arts static files
    depends_on:
      - mqtt
      - arena-persist
      - store
      - arts

  mongodb:
    image: mongo # pull from https://hub.docker.com/_/mongo/
    volumes:
      - ./data/mongodb:/data/db # permanent storage on the host

  arena-persist:
    build: "arena-persist" # builds container from arena-persist Dockerfile
    user: "node"
    volumes:
      - ./conf/persist-config.json:/home/node/app/config.json # mount updated config.json that uses the container name
    command: "npm run start"
    depends_on:
      - mongodb

  arena-auth:
    build: "ARENA-auth" # builds container from arena-persist Dockerfile
    user: "root"
    volumes:
      - ./conf/auth-config.json:/home/node/app/config.json # mount updated config.json that uses indicates right paths and secret
      - ./data/certbot/conf:/etc/letsencrypt
    command: "node index.js -c ./config.json"
    restart: unless-stopped

  mqtt:
    image: conixcenter/arena-broker # pulls from https://hub.docker.com/repository/docker/conixcenter/arena-broker
    volumes:
      - ./conf/mosquitto.conf:/mosquitto/config/mosquitto.conf # mount local config file to /mosquitto/config/mosquitto.conf in the container
      - ./data/certbot/conf:/etc/letsencrypt # mount certs volume (see conf/mosquitto.conf to see how the files are used)

  arts:
    build: "arts/arts-main"
    volumes:
      - ./conf/arts-settings.py:/usr/src/app/arts_api/settings.py
      - arts-static-content:/usr/src/app/public # static arts visualization page
    env_file:
      - environment.env
    command: "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - mqtt

  py-runtime:
    build: "arena-runtime-simulated"
    volumes:
      - ./conf/arena-runtime-simulated.conf:/usr/src/app/config.json
    depends_on:
      - arts

volumes:
  arts-static-content:
